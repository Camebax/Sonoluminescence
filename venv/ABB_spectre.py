from Input_text_data import *

pi = 3.1415926535
c = 299792458
h = 6.62607015 * 10 ** (-34)
e = 2.718281828
k = 1.380649 * 10 ** (-23)


def get_ABB_power(lda_min, lda_max, T, power=10, sum_energy=0):  # ВВОД ДЛИН ВОЛН В МЕТРАХ!!!
    """Считает энергию, излучаемую единицей площади АЧТ температурой T[К] в интервале длин волн lda_min-max[м]"""
    lda = lda_min
    while lda <= lda_max:  # Перебор всех длин волн из указанного диапазона
        u_lda = (8 * pi * h * c / lda ** 5) / (
                    e ** (h * c / (lda * k * T)) - 1)  # Спектральная плотность энергии для данной lda
        sum_energy += (u_lda * 10 ** (
            -9)) * 2  # Прибавляем спектральную плотность в данной точке к общей мощности, тут и далее умножение на
        # 2, тк шаг 2нм
        lda += (10 ** (-9)) * 2  # Переходим к следующей длине волны (шаг 2 нанометра, так как в Тонином файле он такой)
    print(sum_energy)
    return sum_energy  # Возвращаем полученный интеграл по заданному в начале диапазону


def get_slice_abs_coeff(T, clorine_abs_spectre, l=10 ** (-6),  # Эти аргументы скорее всего придется менять
                        lda_min=380 * 10 ** (-9), lda_max=800 * 10 ** (-9),
                        sum_energy_in=0, sum_energy_out=0):
    """Находит, какую часть от исходной мощности АЧТ с T[К] поглотил слой хлорина толщиной l[м]"""
    lda = lda_min
    while lda <= lda_max:  # Перебор всех длин волн из указанного диапазона
        u_lda = (8 * pi * h * c / lda ** 5) / (
                    e ** (h * c / (lda * k * T)) - 1)  # Спектральная плотность энергии для данной lda
        sum_energy_in += (u_lda * 10 ** (-9)) * 2  # Прибавляем спектральную плотность в данной точке к общей мощности
        lda += (10 ** (-9)) * 2  # Переходим к следующей длине волны (шаг 2 нанометра, так как в Тонином файле он такой)
    # print('Упавшая энергия:', sum_energy_in)
    lda = lda_min  # Подсчитываем энергию, прошедшую через слой l хлорина на каждой длине волны
    while lda <= lda_max:
        a = clorine_abs_spectre[round(lda * 10 ** (9))]  # Коэффициент поглощения для длины волны lda
        u_lda = (8 * pi * h * c / lda ** 5) / (e ** (h * c / (lda * k * T)) - 1)
        sum_energy_out += (u_lda * 10 ** (-9)) * 2 * (10 ** (-a * l))  # ВЕРНО ЛИ ???
        lda += (10 ** (-9)) * 2  # Умножение на 2, тк шаг по частотам 2нм
        # print(a)
    # print('Прошедшая энергия:', sum_energy_out)
    return 1 - sum_energy_out / sum_energy_in  # Возвращаем количество усвоенной хлорином энергии


# print('Энергия на входе в хлорин:', get_ABB_power(380 * 10 ** (-9), 800 * 10 ** (-9), 5000))

'''Вносим в программу нужные спектры поглощения'''
file_clorine = 'text_files/abs_spec_clorine.txt'
clorine_abs_spectre = get_spectre(file_clorine)  # Словарь со спектром поглощения хлорина

# print('Относительный коэффициент поглощения:', get_slice_abs_coeff(5000,clorine_abs_spectre, 10**(-6)))

#################################################### СИДЕТЬ И ПРОВЕРЯТЬ МАТЧАСТЬ!!! #################################################################
